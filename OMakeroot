open build/OCaml
open tools/OMakeLibrary.om
DefineCommandVars()

.PHONY: app doc install uninstall


################################################################################
# General Project Information
PROJECT = plawireg
VERSION = 0.0.0-dev
DESCRIPTION = Play With The Reference Graph

if $(test -e .git)
  GIT_COMMIT = 'Some "$(shell git rev-parse HEAD)"'
  export
else
  GIT_COMMIT = 'None'
  export

PURE_LIB_NAME = $(PROJECT)

LWT_UNIX_LIB_NAME = $(PROJECT)_lwt_unix
LWT_UNIX_LIB_PACKAGES = nonstd  pvem  pvem_lwt_unix  sosa \
  ppx_deriving.std ppx_deriving_yojson \
  cohttp cohttp.lwt

APP_NAME = $(PROJECT)
APP_PACKAGES = $(LWT_UNIX_LIB_PACKAGES)

NATIVE_ENABLED = $(OCAMLOPT_EXISTS)
BYTE_ENABLED = $(OCAMLC_EXISTS)

OCAMLFLAGS = -bin-annot -thread -short-paths -safe-string

section
    OCAMLPACKS[] = nonstd  pvem sosa ppx_deriving.std ppx_deriving_yojson
    .DEFAULT: $(OCamlPackedLibraryOfDir plawireg, src/lib)
section
    OCAMLPACKS[] = $(LWT_UNIX_LIB_PACKAGES)
    OCAML_LOCAL_LIBS[] = src/lib/plawireg
    DESCRIPTION = $(DESCRIPTION) -- Unix library
    .DEFAULT: $(OCamlPackedLibraryOfDir plawireg_lwt_unix, src/lwt_unix)
section
    OCAML_LOCAL_LIBS += src/lib/$(PURE_LIB_NAME) src/lwt_unix/$(LWT_UNIX_LIB_NAME)
    OCAMLPACKS[] = $(APP_PACKAGES)
    .DEFAULT: $(OCamlProgramOfDirectory plawireg, $(dir src/app))


DotMerlin(./src, $(LWT_UNIX_LIB_PACKAGES))

install: install-lib-plawireg install-lib-plawireg_lwt_unix install-app-plawireg
uninstall: uninstall-lib-plawireg uninstall-lib-plawireg_lwt_unix uninstall-app-plawireg

################################################################################
# Sub-directories
.SUBDIRS: .
  mkdir -p _build/doc

  ##############################################################################
  # Documentation
  .SUBDIRS: _build/doc

    api/index.html: ../lwt_unix/$(LWT_UNIX_LIB_NAME).cma
      rm -rf api
      mkdir api
      ocamlfind ocamldoc \
        -package $(concat \,, $(LWT_UNIX_LIB_PACKAGES)) \
        -charset UTF-8 \
        -d api \
        -t "$(PROJECT) $(VERSION)" \
        -keep-code \
        -colorize-code \
        -sort \
        -I ../lib \
        -thread \
        -html \
        ../src/lwt_unix/*.mli ../src/lwt_unix/*.ml

    doc: api/index.html

